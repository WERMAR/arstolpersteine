openapi: 3.0.0
info:
  title: Secured AR-Stolperstein API
  description: This is the secured OpenAPI Specification for the AR-Stolpersteine Backend
  version: 1.0.0
servers:
  - url: 'http://localhost:8580'
paths:
  /api/secured/stolpersteine/synchronize:
    get:
      tags:
        - SecuredStolpersteine
      summary: Synchronize the Database with existing Overpass API
      operationId: syncOverpassAPI
      security:
        - KeycloakAuth:
            - ADMIN
      responses:
        200:
          description: OverpassAPI synchronization was successfully executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordCounter:
                    type: integer
                    description: Counter how many Records where imported
        500:
          description: Internal Server Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/stolpersteine:
    get:
      tags:
        - SecuredStolpersteine
      summary: Get Stolpersteine all existing Stolpersteine
      description: Get all available Stolpersteine (combine overpass-stolpersteine and own managed)
      operationId: getAllStolpersteine
      security:
        - KeycloakAuth:
            - USER
      responses:
        200:
          description: return all stolpersteine based on userId
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StolpersteinPositionDto'
        400:
          description: Bad Request when no userID was provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        404:
          description: If no Stolpersteine for UserId was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
    post:
      tags:
        - SecuredStolpersteine
      summary: Create a new Stolpersteine for given userId
      description: Get all available Stolpersteine for an User
      operationId: addStolpersteinForUser
      security:
        - KeycloakAuth:
            - USER
      parameters:
        - name: userId
          in: path
          description: ID of User
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StolpersteineReqDto'
      responses:
        200:
          description: return created stolpersteine
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StolpersteineResponseDto'
        400:
          description: Bad Request when no valid request was send
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/stolpersteine/{stolpersteinId}:
    get:
      tags:
        - SecuredStolpersteine
      summary: Get Stolpersteine for Id
      description: Get Stolpersteine for given Id
      operationId: getStolpersteinForId
      parameters:
        - name: stolpersteinId
          in: path
          description: ID of Stolperstein
          required: true
          schema:
            type: integer
            format: int64
      security:
        - KeycloakAuth:
            - USER
      responses:
        200:
          description: get stolperstein for given Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StolpersteineResponseDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        404:
          description: If no Stolpersteine existing for Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/stolpersteine/update/{stolpersteinId}:
    put:
      tags:
        - SecuredStolpersteine
      summary: Update a existing Stolpersteine
      description: Update a existing Stolperstein for given Id
      operationId: updateStolpersteine
      security:
        - KeycloakAuth:
            - USER
      parameters:
        - name: stolpersteinId
          in: path
          description: ID of explicit Stolperstein
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StolpersteineReqDto'
      responses:
        200:
          description: update was successfully and return updated object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StolpersteineResponseDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        404:
          description: When a Stolperstein is not existing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/requests:
    get:
      tags:
        - SecuredRequests
      summary: Load all existing Requests
      description: Load all existing Requests for adding Stolperstein-Informations to the System
      operationId: getStolpersteinRequests
      security:
        - KeycloakAuth:
            - ADMIN
      responses:
        200:
          description: all existing requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponseDto'
        403:
          description: Forbidden - the Resource is only available for a specific role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/requests/{requestId}/approve:
    post:
      tags:
        - SecuredRequests
      summary: Approve Request for Id
      description: Approve referenced Request and activate Stolperstein
      operationId: approveRequest
      security:
        - KeycloakAuth:
            - ADMIN
      parameters:
        - name: requestId
          in: path
          description: ID of Request
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Request is approved and Stolperstein active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponseDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        404:
          description: Request for Id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        403:
          description: Forbidden - the Resource is only available for a specific role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/requests/{requestId}/reject:
    post:
      tags:
        - SecuredRequests
      summary: Reject Request for Id
      description: Reject referenced Request and don't activate Stolperstein
      operationId: rejectRequest
      security:
        - KeycloakAuth:
            - ADMIN
      parameters:
        - name: requestId
          in: path
          description: ID of Request
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  nullable: false
                  type: string
                  description: Reason why Request is rejected
                  example: Die Bilder entsprechen nicht unseren Richtlinien.
                  maxLength: 512
                informRequester:
                  type: boolean
                  description: If the requester should be informed, that the Request is rejected
      responses:
        200:
          description: Request is reject
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponseDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        404:
          description: Request for Id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        403:
          description: Forbidden - the Resource is only available for a specific role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/photos/resourceGroup/{groupID}:
    get:
      tags:
        - SecuredPhotos
      summary: Load Photos for within resource group
      description: Load All existing Photos as a Resource Group for the Group-ID
      operationId: getPhotosForGroupId
      security:
        - KeycloakAuth:
            - USER
            - ADMIN
      parameters:
        - name: groupID
          in: path
          description: ID of a Resource Group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: All available Photos under referenced Resource-Group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourcePhotoDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        404:
          description: Resource Group was not found for Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
  /api/secured/photos/upload:
    post:
      tags:
        - SecuredPhotos
      summary: Upload Photos
      description: Upload Photos
      operationId: uploadPhotos
      security:
        - KeycloakAuth:
            - USER
            - ADMIN
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        200:
          description: Return information when upload was successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhotoUploadResponseDto'
        400:
          description: Bad Request when no valid request was send
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
        500:
          description: Internal Server Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDto'
components:
  securitySchemes:
    KeycloakAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost/oauth/authorize
          tokenUrl: http://localhost/ouath/token
          scopes:
            ADMIN: Grant ADMIN access
            USER: Grant USER access

  schemas:
    ProblemDto:
      type: object
      properties:
        errorCode:
          type: integer
          example: 400
        description:
          type: string
          example: Bad Request - Missing Parameter
    VictimReqDto:
      type: object
      required:
        - firstname
        - lastname
        - dateOfBirth
        - dateOfDeath
      properties:
        firstname:
          type: string
          example: Max
        lastname:
          type: string
          example: Mustermann
        dateOfBirth:
          type: string
          format: date
          example: 1933-12-21
        dateOfDeath:
          type: string
          format: date
          example: 1942-02-23
    AddressReqDto:
      type: object
      required:
        - streetName
        - houseNumber
        - postCode
      properties:
        streetName:
          type: string
          example: Mustermann-Strasse
        houseNumber:
          type: string
          maxLength: 4
          minLength: 1
          example: 12a
        postCode:
          type: string
          maxLength: 5
          minLength: 5
          example: 97074
        city:
          type: string
          example: Wuerzburg
    PhotoReqDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 232
    StolpersteineReqDto:
      type: object
      required:
        - description
        - position
        - victim
      properties:
        description:
          type: string
          example: That is an example of a stolperstein description
        position:
          type: object
          required:
            - lat
            - lng
          properties:
            lat:
              type: number
              format: float
              example: 90.233232
            lng:
              type: number
              format: float
              example: 23.232232
        victim:
          $ref: '#/components/schemas/VictimReqDto'
        address:
          $ref: '#/components/schemas/AddressReqDto'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/PhotoReqDto'

    VictimResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 232
        firstname:
          type: string
          example: Max
        lastname:
          type: string
          example: Mustermann
        dateOfBirth:
          type: string
          format: date
          example: 1933-12-21
        dateOfDeath:
          type: string
          format: date
          example: 1942-02-23
    AddressResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 232
        streetName:
          type: string
          example: "Mustermannstrasse"
        houseNumber:
          type: string
          maxLength: 4
          minLength: 1
          example: 12a
        postCode:
          type: string
          maxLength: 5
          minLength: 5
          example: 97074
        city:
          type: string
          example: Wuerzburg
    PhotoResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 232
        heading:
          type: integer
          description: representing the heading on a compass for N, W, E, S
          format: int16
          example: 90
        resourceUrl:
          type: string
          description: specific path to resource to download the file
          example: "/232/example-crypt-3s2323.jpeg"
        resourceGroup:
          type: string
          description: representing the group where all available resources can be loaded as once
          example: "/232"
    StolpersteineResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1023
        description:
          type: string
          example: That is an example of a stolperstein description
        position:
          type: object
          properties:
            lat:
              type: number
              format: float
              example: 90.233232
            lng:
              type: number
              format: float
              example: 23.232232
        victim:
          $ref: '#/components/schemas/VictimResponseDto'
        address:
          $ref: '#/components/schemas/AddressResponseDto'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/PhotoResponseDto'
    RequestResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3232
        status:
          type: string
          enum:
            - REQUESTED
            - APPROVED
            - REJECTED
        requester:
          type: object
          properties:
            firstname:
              type: string
              example: Max
            lastname:
              type: string
              example: Mustermann
        requestedStolperstein:
          $ref: '#/components/schemas/StolpersteineResponseDto'
    ResourcePhotoDto:
      description: The Entity of one Photo
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2322
        photo:
          type: string
          format: binary
    ResourceGroupPhotoDto:
      description: List of the Resource-Photo loaded
      type: array
      items:
        $ref: '#/components/schemas/ResourcePhotoDto'
    PhotoUploadDto:
      description: Photo Upload Request Object
      type: object
      properties:
        file:
          type: string
          format: binary
    PhotoUploadReqDto:
      description: Upload List
      type: array
      minimum: 1
      items:
        $ref: '#/components/schemas/PhotoUploadDto'
    PhotoUploadResponseDto:
      description: Response after an successful Upload
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of Photo
          example: 232343
        heading:
          type: integer
          description: Heading of the Direction (North, South, West, East)
          example: 90
        resourceGroupId:
          type: integer
          format: int64
          description: ID of Resource Group, how the complete Upload is downloadable
          example: 232
        downloadURI:
          type: string
          description: downloadURI for download the complete ResourceGroup
          example: /api/secured/photos/resourceGroup/232
    StolpersteinPositionDto:
      description: Object which represents only a single point of a stolperstein without any further informations
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1023
        position:
          type: object
          properties:
            lat:
              type: number
              format: float
              example: 90.233232
            lng:
              type: number
              format: float
              example: 23.232232